:root {
  --bg-main-color: /*#0eb5f2;*/ #00000080;
  --border-color: #f2c43d;
  --document-bg-color:/* #3e9cbf;*/ #68686850;
  --bg-accent-color: #f26d50;
  --smokeywhite: #dddbd8;
  --shadow-color: #202020;
  --text-edit-bg-color: #575757;
  --text-accent-color: #ffe498;
  --component-bg-gradient: radial-gradient(
    circle,
    #646464e6 0%,
    #363636e6 100%
  );
}

html {
  margin: 0;
  padding: 0;
}

p {
  color: white;
}

label {
  color: var(--smokeywhite);
}

* {
  outline: 0; /* 요소의 보더라인 보다 더 바깥쪽 라인을 의미한다. */
  box-sizing: border-box; /* 실제 요소의 가로 높이를 정할때, 패딩과 보더를 포함할지 안할지 정할 수 있다. */
  /* 여기서는 border-box로 보더,패딩을 모두 합쳐 가로 높이를 정한다. 기본적으로 이 옵션을 많이 사용한다.
  다른 옵션으로는 default로 content-box가 있는데 이것은 기본적으로 적용되므로 이 옵션을 쓸 때는 일반적으로 사용하지 않는다.
  */
}

.background {
  position: absolute;
  display: block;
  top: 0;
  left: 0;
  z-index: 0;
}

body {
  background: url("../assets/background.png") center/cover no-repeat;
  font-family: Roboto Oxygen, sans-serif;
  display: flex;
  justify-content: center; /* 가로 중앙 정렬 */
  height: 100vh;
  overflow: hidden;
  font-size: 1.25rem;
  margin: 0;
  padding: 0;
}

li {
  list-style: none;
  padding-left: 0;
}

button {
  background: transparent;
  border: 0;
  outline: 0;
}

input,
textarea {
  background-color: var(
    --text-edit-bg-color
  ); /* 기본 흰색이 되는 바탕색을 회색으로 바꿈. */
  color: var(--smokeywhite); /* 글자색을 이색으로 약간 회색빛이 나도록 바꿈*/
  font-size: 1.5em;
}
.app {
  width: 100%;
  max-width: 1000px; /* 꽉찬 가로를 유지하다가, 1000px이 넘어가면 더이상 커지지 않는다. */
  height: 100%;
  display: flex; /* 한 줄에 하나씩 나오도록  */
  flex-direction: column; /* 한 줄에 컬럼 하나씩 차지하도록 */
}
.createBtn:hover,
.createBtn:focus {
  cursor: pointer;
  box-shadow: 3px 3px var(--shadow-color);
}

.document {
  overflow-y: auto;
  height: 100%;
  background-color: var(--document-bg-color);
  /* Firefox */
  scrollbar-width: 6px;
  scrollbar-color: var(--document-bg-color);
  scrollbar-face-color: var(--bg-accent-color);
}
/*  파이어폭스는 바로 스크롤바에 대해 적용이 가능하지만, 사파리와 크롬에는 추가로 에프터 슈도로 추가해줘야 한다. */
.document::-webkit-scrollbar {
  /* Safari and Chrome */
  background-color: var(--document-bg-color);
  width: 6px;
}

.document::-webkit-scrollbar-thumb {
  /* Safari and Chrome */
  background-color: var(--bg-accent-color);
}
.footer {
  background: var(--bg-main-color); /* 해당 전체 요소의 배경색깔 */
  border-top: 1px solid var(--border-color);
  text-align: center; /* 안에 있는 텍스트만 가운데 정렬 */
}

.banner {
  background: var(--bg-main-color);
  border-bottom: 1px solid var(--bg-accent-color); /* 베너 밑에 가로선을 긋는 시각적 효과를 보여준다. */
  text-align: center;
}

.bannerTitle {
  margin: 20px;
  color: var(--bg-accent-color);
}

.controlPanel {
  display: flex; /* flex로 하면 한 줄을 모두 차지하면서 붙어 있게 한다.(콘텐츠 크기는 플레스블하게 한줄에 꽉 차도록 자동 조절된다.) */
  align-items: center; /* 세로 정렬이다. 근데 여기선 지워도 변함은 없다. */
  justify-content: center; /* 가로 정렬이다. 여기서는 센터로 오도록 한다. */
}

.createBtn,
.submitBtn {
  margin: 0.1em 0.2em; /* 2개의 밸류를 넣으면 첫번째 밸류가 top과 bottom이다. */
  text-align: center; /* 버튼 안에 글씨 중간 정렬 그러나 여기선 상속된것이 있어서 없어도 차이는 없음. */
  user-select: none; /* 사용자가 마우스로 드래깅을 할 수 없도록 방지함. */
  padding: 1em 3em;
  text-transform: uppercase; /* 버튼 안에 텍스트를 모두 대문자로 */
  font-weight: 600; /* 글씨 두깨를 조절한다. */
  font-size: 0.8rem;
  color: white; /* 글씨 색깔 */
  background-color: var(--bg-accent-color);
  border-color: var(--bg-accent-color);
  border-radius: 2px; /* 모서리 부분을 둥글게 처리한다. */
}

.submitBtn:hover,
.submitBtn:focus {
  cursor: pointer;
  color: green;
}

/* Dialog window */
dialog {
  border: 0;
}

.dialog {
  display: flex;
  align-items: center; /* 세로 중앙정렬 */
  justify-content: center; /* 가로 중앙정렬 */
  z-index: 1;
  position: fixed;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  font-size: 1.2rem;
  background-color: var(--bg-main-color);
}

.dialogContainer {
  display: flex; /* 현재 이 container의 쌓아가는 방향을 결정한다. 주의할점으로는 내부 item에는 영향을 주지 않는다. */
  /* 참고로 flex와 inline-flex가 있으며, flex는 수직방향으로 쌓이고, inline-flex는 수평방향으로 쌓인다. */
  flex-direction: column; /* 내부 아이템의 쌓아가는 방향을 결정한다. */
  padding: 0.4em;
  width: 32em;
  background: var(--bg-main-color);
  border: 1px solid var(--border-color);
  border-radius: 0.5rem;
  box-shadow: 2px 2px 20px var(--bg-accent-color);
}

.formContainer {
  display: flex;
  flex-direction: column;
  margin-bottom: 1em;
}

/* close button, submit button */
.close {
  align-self: flex-end; /* 수평의 가장 끝쪽으로 가도록 한다. */
  padding: 0.2rem;
  color: var(--bg-accent-color);
  font-size: 28px;
  font-weight: bold;
  margin: 3px;
  transition: color 250ms ease; /* 칼라가 바뀌는 효과가 올때, 250ms초로 천천히 진행되게 한다. */
}

.close:hover,
.close:focus {
  /* 가상 선택자를 활용해서, 마우스가 올라갈때나 커서가 선택될때, 다음과 같은 효과를 주게 된다. */
  transform: scale(1.5);
  color: red;
  text-decoration: none;
  cursor: pointer;
}

.submitBtn {
  align-self: flex-end;
  padding: 0.5em 1.5em;
}
/* End Dialog Window */

/* Pageitem */
.pageItem {
  margin: 1.5em;
  display: flex;
  justify-content: space-between; /* 아이템의 가로 공간을 정의함. 
  space-between은 아이템을 가로의 양쪽 끝쪽으로 몰아 넣고 사이의 공간을 최대로 함.*/
  align-items: center;
  box-shadow: 2px 2px 6px var(--shadow-color);
  background: var(--component-bg-gradient);
}

.pageItemControls {
  padding-right: 0.5em;
}

.pageItemBody {
  width: 100%;
}

.pageItemTitle {
  color: var(--text-accent-color);
}
/* PageItem End */

/* Image, Video */
.youtube,
.image {
  display: flex;
  width: 100%;
  height: 250px;
}

.youtubePlayer,
.imageHolder {
  flex: 60% 1 1; /* flex 컨테이너 안에 있는 아이템들에게 부여할 수 있는 속성이다. 
  /* flex: expand rate; reduce rate; default; */
}

.imageThumbnail {
  width: 100%;
  height: 100%;
}

.youtubeTitle,
.imageTitle {
  flex: 40% 1 1;
  margin-left: 0.5em;
}

.youtubeIframe {
  border: none;
  width: 100%;
  height: 100%;
}
/* Image, Video End */

/* Note, Todo */
.note {
  padding: 0.5em;
}
.todo {
  display: flex;
  flex-direction: column;
  padding: 0.5em;

  overflow-x: hidden;
}

.addMoreTodo,
.todoConfirmBtn,
.todoCancelBtn {
  color: var(--smokeywhite);
  text-shadow: 1px 1px var(--shadow-color);
  transition: color 250ms ease;
}
.addMoreTodo:hover,
.todoConfirmBtn:hover {
  color: green;
  cursor: pointer;
}

.todoCancelBtn:hover {
  color: red;
  cursor: pointer;
}
/* Note, Todo End */
